{"pass_1": 0.09364406779661019, "pass_k": 0.1652542372881356, "log": [{"task_id": 937, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 949, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 962, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 967, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 13, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 28, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 57, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 66, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef pos_count(list): \n    return sum(1 for num in list if num > 0)"}, {"task_id": 76, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 90, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef len_log(list1): \n    longest = 0\n    for word in list1: \n        if len(word) > longest: \n            longest = len(word)\n    return longest "}, {"task_id": 100, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 101, "pass_1": 0.5999999999999999, "pass_k": 1.0, "k": 10, "num_success": 6, "passed": true, "solution": "\ndef kth_element(arr, n, k): \n    return arr[n-1] if k > len(arr) else arr[k-1]"}, {"task_id": 103, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 109, "pass_1": 0.5, "pass_k": 1.0, "k": 10, "num_success": 5, "passed": true, "solution": "\ndef odd_Equivalent(s,n): \n    count = 0 \n    for i in range(0,len(s)):\n        if s[i] == '1':\n            count += 1\n    return count "}, {"task_id": 126, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef sum(a,b): \n    sum = 0\n    for i in range(1,a+1): \n        if a % i == 0 and b % i == 0:\n            sum = sum + i\n    return sum"}, {"task_id": 150, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 151, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 172, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 198, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 202, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 204, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef count(s,c) : \n    return s.count(c) "}, {"task_id": 212, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 218, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 224, "pass_1": 0.4, "pass_k": 1.0, "k": 10, "num_success": 4, "passed": true, "solution": "\ndef count_Set_Bits(n): \n    return bin(n)[2:].count('1')"}, {"task_id": 226, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 228, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef all_Bits_Set_In_The_Given_Range(n,l,r): \n    return ((n&(1<<l)!=0)|((n>>l)!=0))&((n>>r)!=0)"}, {"task_id": 243, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 250, "pass_1": 0.5, "pass_k": 1.0, "k": 10, "num_success": 5, "passed": true, "solution": "\ndef count_X(tup, x): \n    return sum(1 for e in tup if e == x)"}, {"task_id": 253, "pass_1": 0.7, "pass_k": 1.0, "k": 10, "num_success": 7, "passed": true, "solution": "\ndef count_integer(list1): \n    return sum(1 for _ in list1 if isinstance(_, int))"}, {"task_id": 271, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 288, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 295, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 299, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 305, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 317, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 329, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef neg_count(list): \n    return len([i for i in list if i < 0])"}, {"task_id": 346, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 347, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 352, "pass_1": 0.30000000000000004, "pass_k": 1.0, "k": 10, "num_success": 3, "passed": true, "solution": "\ndef unique_Characters(str): \n    uniqueChars = set(str) \n    return len(uniqueChars) == len(str) "}, {"task_id": 365, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 389, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 425, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef count_element_in_list(list1, x): \n    return sum(1 for sublist in list1 if x in sublist) "}, {"task_id": 433, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 437, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 443, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 444, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 449, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 452, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 517, "pass_1": 0.7999999999999999, "pass_k": 1.0, "k": 10, "num_success": 8, "passed": true, "solution": "\ndef largest_pos(list1): \n    largest_pos = max(list1) \n    return largest_pos "}, {"task_id": 526, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 533, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 534, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 552, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 554, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\ndef Split(list): \n    return [i for i in list if i % 2!= 0]"}, {"task_id": 561, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 570, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 573, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 590, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 591, "pass_1": 0.5, "pass_k": 1.0, "k": 10, "num_success": 5, "passed": true, "solution": "\ndef swap_List(newList): \n    temp = newList[0]\n    newList[0] = newList[len(newList)-1]\n    newList[len(newList)-1] = temp\n    return newList"}, {"task_id": 599, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 625, "pass_1": 0.4, "pass_k": 1.0, "k": 10, "num_success": 4, "passed": true, "solution": "\ndef swap_List(newList): \n  temp = newList[0]\n  newList[0] = newList[-1]\n  newList[-1] = temp\n  return newList"}, {"task_id": 629, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef Split(list): \n    even = []\n    for i in list:\n        if i % 2 == 0:\n            even.append(i)\n    return even"}, {"task_id": 633, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 634, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 635, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 653, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\nfrom collections import defaultdict\r\ndef grouping_dictionary(l): \r\n    grouped_dict = defaultdict(list)\r\n    for k, v in l:\r\n        grouped_dict[k].append(v)\r\n    return grouped_dict"}, {"task_id": 666, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\ndef count_char(string,char): \n    return string.count(char)"}, {"task_id": 675, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 677, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 686, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 700, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef count_range_in_list(li, min, max): \n    return sum(1 for item in li if item >= min and item <= max)"}, {"task_id": 741, "pass_1": 0.5999999999999999, "pass_k": 1.0, "k": 10, "num_success": 6, "passed": true, "solution": "\ndef all_Characters_Same(s) : \n    return all(s[i] == s[i+1] for i in range(len(s)-1))"}, {"task_id": 746, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 754, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 760, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 761, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 773, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 782, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 791, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef remove_nested(test_tup): \n    return tuple(x for x in test_tup if not isinstance(x, tuple))"}, {"task_id": 797, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 801, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 862, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\nfrom collections import Counter\r\nimport re\r\ndef n_common_words(text,n): \r\n    words = Counter(re.findall(r\"\\b\\w+\\b\", text))\r\n    return words.most_common(n)"}, {"task_id": 884, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 897, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\ndef is_Word_Present(sentence,word): \n    return word in sentence"}, {"task_id": 925, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 932, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef remove_duplic_list(l): \n    seen = set()\n    return [x for x in l if not (x in seen or seen.add(x))]"}, {"task_id": 947, "pass_1": 0.5999999999999999, "pass_k": 1.0, "k": 10, "num_success": 6, "passed": true, "solution": "\ndef len_log(list1): \n    return min(len(x) for x in list1) "}, {"task_id": 954, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef profit_amount(actual_cost,sale_amount): \n    if actual_cost - sale_amount < 0:\n        return None\n    return actual_cost - sale_amount"}, {"task_id": 960, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 3, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 16, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 25, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\ndef find_Product(arr,n): \n    product = 1\n    for i in range(n): \n        product *= arr[i] \n    return product "}, {"task_id": 26, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 36, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 43, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 44, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 79, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 92, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 108, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 121, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 128, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 130, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\nfrom collections import defaultdict\r\ndef max_occurrences(nums): \r\n    freq = defaultdict(int) \r\n    for x in nums: \r\n        freq[x] += 1\r\n    return max(freq.items(), key=lambda x: x[1])"}, {"task_id": 145, "pass_1": 0.5999999999999999, "pass_k": 1.0, "k": 10, "num_success": 6, "passed": true, "solution": "\ndef max_Abs_Diff(arr,n): \n    diff=arr[0]-arr[n-1]\n    for i in range(1,n-1):\n        diff=max(diff,abs(arr[i]-arr[i-1]))\n    return diff"}, {"task_id": 165, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 166, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 178, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 182, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 183, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 186, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 187, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 188, "pass_1": 0.5999999999999999, "pass_k": 1.0, "k": 10, "num_success": 6, "passed": true, "solution": "\ndef prod_Square(n): \n    if (n==1) or (n==2) or (n==3) or (n==4) or (n==5) or (n==6) or (n==7) or (n==8) or (n==9) or (n==10) or (n==11) or (n==12) or (n==13) or (n==14) or (n==15) or (n==16) or (n==17) or (n==18) or (n==19) or (n==20) or (n==21): \n        return True\n    else: \n        return False"}, {"task_id": 199, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 203, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef hamming_Distance(n1,n2) : \n    return int(bin(n1 ^ n2)[2:].count('1')) "}, {"task_id": 215, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 216, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 222, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 270, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 285, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 296, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 300, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 337, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 349, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 380, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 388, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 396, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 402, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 431, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 438, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 446, "pass_1": 0.4, "pass_k": 1.0, "k": 10, "num_success": 4, "passed": true, "solution": "\nfrom collections import Counter \r\ndef count_Occurrence(tup, lst): \r\n    return sum(1 for _ in tup if _ in lst) "}, {"task_id": 454, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 462, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 482, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 527, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 529, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 543, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 547, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 549, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 556, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 564, "pass_1": 0.20000000000000007, "pass_k": 1.0, "k": 10, "num_success": 2, "passed": true, "solution": "\ndef count_Pairs(arr,n): \n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if arr[i]!= arr[j]:\n                count += 1\n    return count"}, {"task_id": 577, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 583, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 631, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\nimport re\r\ntext = 'Python Exercises'\r\ndef replace_spaces(text): \r\n    return re.sub(r'[ ]+', '_', text)"}, {"task_id": 643, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 656, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 691, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 692, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 719, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 737, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 751, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 752, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 756, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 758, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 763, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 766, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 767, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 770, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 774, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 777, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 779, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 787, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 794, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 803, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 808, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef check_K(test_tup, K): \n    return any(map(lambda x:x==K,test_tup))"}, {"task_id": 831, "pass_1": 0.20000000000000007, "pass_k": 1.0, "k": 10, "num_success": 2, "passed": true, "solution": "\ndef count_Pairs(arr,n): \n    count = 0 \n    for i in range(n): \n        for j in range(i+1,n): \n            if arr[i]==arr[j]: \n                count += 1\n    return count "}, {"task_id": 839, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 841, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 849, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 860, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 879, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 880, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 891, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef same_Length(A,B): \n    return len(str(A))==len(str(B))"}, {"task_id": 900, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 905, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 913, "pass_1": 0.30000000000000004, "pass_k": 1.0, "k": 10, "num_success": 3, "passed": true, "solution": "\nimport re\r\ndef end_num(string): \r\n    return re.search(r'\\d+$', string) is not None"}, {"task_id": 914, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 917, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 930, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 941, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 942, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef check_element(test_tup, check_list): \n    for x in check_list:\n        if x in test_tup:\n            return True\n    return False"}, {"task_id": 964, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef word_len(s): \n    return len(s)%2==0"}, {"task_id": 9, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 23, "pass_1": 0.5, "pass_k": 1.0, "k": 10, "num_success": 5, "passed": true, "solution": "\ndef maximum_Sum(list1): \n    maximum = 0\n    for x in list1: \n        maximum = max(maximum, sum(x))\n    return maximum"}, {"task_id": 48, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 56, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 65, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 67, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 78, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 141, "pass_1": 0.5999999999999999, "pass_k": 1.0, "k": 10, "num_success": 6, "passed": true, "solution": "\ndef pancake_sort(nums): \n    sorted_nums = sorted(nums) \n    return sorted_nums"}, {"task_id": 147, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 155, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 167, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 175, "pass_1": 0.5999999999999999, "pass_k": 1.0, "k": 10, "num_success": 6, "passed": true, "solution": "\ndef is_valid_parenthese( str1): \n    paren_count = 0\n    for c in str1: \n        if c == '(': \n            paren_count += 1\n        elif c == ')': \n            paren_count -= 1\n    return paren_count == 0"}, {"task_id": 217, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 227, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef min_of_three(a,b,c): \n    return min(a,b,c) "}, {"task_id": 235, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 264, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 303, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 314, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 320, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 321, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 331, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef count_unset_bits(n): \n    return bin(n).replace(\"0b\",\"\").count(\"0\")"}, {"task_id": 371, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 377, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\ndef remove_Char(s,c) : \n    return \"\".join(i for i in s if i!= c)"}, {"task_id": 383, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 385, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 416, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 417, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 434, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 481, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 483, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 537, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 575, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 607, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 608, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 645, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 663, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 672, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef max_of_three(num1,num2,num3): \n    if num1>num2 and num1>num3: \n        return num1 \n    elif num2>num3 and num2>num1: \n        return num2 \n    else: \n        return num3 "}, {"task_id": 845, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 850, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 859, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 867, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 899, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 910, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 916, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 923, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 963, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 24, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 29, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 83, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 93, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef power(a,b): \n    return a ** b "}, {"task_id": 110, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 125, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 127, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef multiply_int(x, y): \n    return x * y"}, {"task_id": 140, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 158, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 160, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 192, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef check_String(str): \n  if str.isalpha() == False and str.isdigit() == False: \n    return True\n  else: \n    return False"}, {"task_id": 229, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 236, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 280, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 291, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 302, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef set_Bit_Number(n): \n    return n & (n - 1) "}, {"task_id": 311, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 318, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 324, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 326, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 332, "pass_1": 0.4, "pass_k": 1.0, "k": 10, "num_success": 4, "passed": true, "solution": "\ndef char_frequency(str1): \n    char_count = {}\n    for char in str1:\n        if char not in char_count:\n            char_count[char] = 1\n        else:\n            char_count[char] += 1\n    return char_count"}, {"task_id": 362, "pass_1": 0.20000000000000007, "pass_k": 1.0, "k": 10, "num_success": 2, "passed": true, "solution": "\ndef max_occurrences(nums): \n    return max(nums, key=nums.count)"}, {"task_id": 387, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 394, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 406, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 487, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 498, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 505, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 546, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 592, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 595, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 605, "pass_1": 0.5, "pass_k": 1.0, "k": 10, "num_success": 5, "passed": true, "solution": "\ndef prime_num(num): \n    if num > 2:\n        if num % 2 == 0:\n            return False\n        else:\n            return True\n    else:\n        return False"}, {"task_id": 627, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 630, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 650, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 658, "pass_1": 0.20000000000000007, "pass_k": 1.0, "k": 10, "num_success": 2, "passed": true, "solution": "\ndef max_occurrences(list1): \n    return max(list1, key=list1.count)"}, {"task_id": 659, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 681, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 687, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\ndef recur_gcd(a, b): \n    if (b == 0): \n        return a \n    return recur_gcd(b, a % b)"}, {"task_id": 699, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 701, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 768, "pass_1": 0.20000000000000007, "pass_k": 1.0, "k": 10, "num_success": 2, "passed": true, "solution": "\ndef check_Odd_Parity(x): \n    if (x & 1) == 0: \n        return False \n    else: \n        return True"}, {"task_id": 829, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 842, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 855, "pass_1": 0.7999999999999999, "pass_k": 1.0, "k": 10, "num_success": 8, "passed": true, "solution": "\ndef check_Even_Parity(x): \n    if (x & 1 == 0): \n        return True\n    else:\n        return False"}, {"task_id": 868, "pass_1": 0.7999999999999999, "pass_k": 1.0, "k": 10, "num_success": 8, "passed": true, "solution": "\ndef length_Of_Last_Word(a): \n    return len(a.split(\" \")[-1])"}, {"task_id": 874, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 903, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 952, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 961, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 969, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 11, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 30, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 33, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 47, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 61, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 137, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 169, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 207, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef find_longest_repeating_subseq(str): \n    count = 0\n    for i in range(len(str)):\n        for j in range(i+1, len(str)):\n            if str[i] == str[j]:\n                count += 1\n    return count"}, {"task_id": 219, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 225, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 246, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 275, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 286, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 304, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 338, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 343, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 350, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 355, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 384, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef frequency_Of_Smallest(n,arr): \n    count = 0\n    for i in arr:\n        if i == min(arr):\n            count += 1\n    return count"}, {"task_id": 415, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 442, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 467, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 468, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 486, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 489, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 510, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 511, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 523, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 530, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 559, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 589, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 619, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 620, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 657, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 669, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 671, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 683, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 706, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 709, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 734, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 826, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 828, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 918, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 922, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 974, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 5, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 45, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 117, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 134, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 149, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 164, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 194, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 256, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 283, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 325, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 364, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 374, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 407, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 509, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 531, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 545, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 548, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 580, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 661, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 664, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 735, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 776, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 823, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 871, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 876, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 885, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 895, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 958, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 22, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 70, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 97, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 107, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 113, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef check_integer(text): \n    try:\n        int(text)\n        return True\n    except ValueError:\n        return False"}, {"task_id": 392, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 414, "pass_1": 1.0, "pass_k": 1.0, "k": 10, "num_success": 10, "passed": true, "solution": "\ndef overlapping(list1,list2): \n    list1.sort()\n    list2.sort()\n    return list1==list2"}, {"task_id": 466, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 480, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 540, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 571, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 576, "pass_1": 0.7999999999999999, "pass_k": 1.0, "k": 10, "num_success": 8, "passed": true, "solution": "\ndef is_Sub_Array(A,B,n,m): \n    if (len(A)!= len(B)): \n        return False\n    for i in range(n):\n        if (A[i]!= B[i]):\n            return False\n    return True"}, {"task_id": 617, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 689, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 806, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 843, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 856, "pass_1": 0.30000000000000004, "pass_k": 1.0, "k": 10, "num_success": 3, "passed": true, "solution": "\ndef find_Min_Swaps(arr,n) : \n    swaps = 0\n    for i in range(n) :\n        for j in range(i+1,n) :\n            if arr[i] > arr[j] :\n                swaps += 1\n    return swaps"}, {"task_id": 901, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 953, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 1, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 20, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 32, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 34, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 60, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 131, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 231, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 239, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 297, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 316, "pass_1": 0.30000000000000004, "pass_k": 1.0, "k": 10, "num_success": 3, "passed": true, "solution": "\ndef find_last_occurrence(A, x): \n    i = len(A) - 1\n    while A[i] > x:\n        i -= 1\n    return i"}, {"task_id": 348, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 351, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 395, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 428, "pass_1": 0.9, "pass_k": 1.0, "k": 10, "num_success": 9, "passed": true, "solution": "\ndef shell_sort(my_list): \n    my_list.sort() \n    return my_list "}, {"task_id": 506, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 512, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 532, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 603, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 684, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 707, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 721, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 733, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 755, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 781, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 926, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 54, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 148, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 195, "pass_1": 0.5, "pass_k": 1.0, "k": 10, "num_success": 5, "passed": true, "solution": "\ndef first(arr,x,n): \n    i=0\n    while i<n and arr[i]<x: \n        i=i+1\n    return i"}, {"task_id": 289, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 403, "pass_1": 0.5, "pass_k": 1.0, "k": 10, "num_success": 5, "passed": true, "solution": "\nimport re\r\ndef is_valid_URL(str): \r\n    pattern = re.compile(r\"^\\w+://[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$\")\r\n    return bool(pattern.match(str))"}, {"task_id": 492, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 524, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 550, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef find_Max(arr,low,high): \n    if (low >= high):\n        return -1\n    mid = (low + high) // 2\n    if (arr[mid] > arr[high]):\n        return arr[mid]\n    return arr[high]"}, {"task_id": 793, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 838, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 844, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 71, "pass_1": 0.5999999999999999, "pass_k": 1.0, "k": 10, "num_success": 6, "passed": true, "solution": "\ndef comb_sort(nums): \n    sorted_nums = sorted(nums) \n    return sorted_nums "}, {"task_id": 122, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 123, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 136, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 245, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 247, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 382, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 408, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 469, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 685, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 771, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 815, "pass_1": 0.4, "pass_k": 1.0, "k": 10, "num_success": 4, "passed": true, "solution": "\ndef sort_by_dnf(arr, n): \n    arr.sort()\n    for i in range(n): \n        if arr[i]!= 2: \n            arr[i], arr[n - i - 1] = arr[n - i - 1], arr[i] \n    return arr"}, {"task_id": 912, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 927, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 971, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 39, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 386, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 397, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 522, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 598, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 601, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 711, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 747, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 863, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 69, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 129, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 189, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 515, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 819, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 836, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 846, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 179, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef is_num_keith(x): \n    return ((x%2==0)^((x//2)%2==0))"}, {"task_id": 181, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 223, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 306, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 367, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 485, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 516, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef radix_sort(nums): \n    radix_sort = [int(nums[i]) for i in range(len(nums))] \n    radix_sort.sort() \n    return radix_sort "}, {"task_id": 853, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 448, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 501, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 541, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 714, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\ndef count_Fac(n): \n    count = 0\n    for i in range(2, int(n**0.5)+1): \n        if n % i == 0:\n            count += 1\n    return count"}, {"task_id": 717, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 783, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 453, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 31, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 159, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 323, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 423, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 520, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 597, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 628, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 152, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 315, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 463, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 822, "pass_1": 0.09999999999999998, "pass_k": 1.0, "k": 10, "num_success": 1, "passed": true, "solution": "\nimport re\r\ndef pass_validity(p): \r\n    return re.search(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])[A-Za-z\\d@#$%^&+=]{8,}$\", p) is not None"}, {"task_id": 702, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 622, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 18, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 74, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 342, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 940, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 950, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 938, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 834, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}, {"task_id": 493, "pass_1": 0.0, "pass_k": 0.0, "k": 10, "num_success": 0, "passed": false, "solution": null}]}